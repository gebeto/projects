{"version":3,"file":"component---src-pages-index-js-a2637b5264c0ef643845.js","mappings":"uJA8CA,IApCY,WAAO,IAAD,EAkBVA,EAAM,WAjBCC,EAAAA,EAAAA,gBAAe,cAiBRC,KAAKC,oBAAb,aAAG,EAAwBH,OAEvC,OACE,uBAAKI,UAAU,eACb,uBAAKA,UAAU,OACb,0CACA,wBAAMA,UAAU,aAAhB,KACA,0BAAKJ,MAAAA,OAAL,EAAKA,EAAQK,U,iFC3BfC,EAAO,SAAC,GAAc,IAAD,EAAXC,EAAW,EAAXA,KACRC,EAAQD,EAAKE,YAAYD,OAASD,EAAKG,OAAOC,KAC9CC,EAAOL,EAAKE,YAAYG,MAAQ,OAEtC,OACE,sBAAIR,UAAS,aAAeQ,GAC1B,uBAAKR,UAAU,cACb,uBAAKS,IAAG,UAAEN,EAAKE,YAAYK,aAAnB,aAAE,EAAwBC,UAAWC,IAAI,aAEnD,2BACEZ,UAAU,eACVa,WAAS,EACTC,SAAS,6BAET,8BACE,0BACGX,EAAKE,YAAYU,KAChB,qBAAGC,KAAMb,EAAKE,YAAYU,KAAME,OAAO,UACrC,wBAAMC,SAAS,YAAYd,IAG7B,gBAAC,EAAAe,KAAD,CAAMC,GAAIjB,EAAKG,OAAOC,KAAMW,SAAS,OACnC,wBAAMA,SAAS,YAAYd,MAKnC,+BACE,qBACEiB,wBAAyB,CACvBC,OAAQnB,EAAKE,YAAYkB,aAAepB,EAAKqB,SAE/CN,SAAS,oBAuBrB,UAdkB,SAAC,GAAwB,IAAtBO,EAAqB,EAArBA,KAAMC,EAAe,EAAfA,SACnBC,EAAQF,EAAKG,kBAAkBC,MAErC,OACE,gBAAC,IAAD,CAAQH,SAAUA,GAChB,gBAAC,IAAD,CAAKtB,MAAM,sBACX,gBAAC,IAAD,MACA,sBAAI0B,MAAO,CAAEC,UAAU,QAAW/B,UAAU,cACzC2B,EAAMK,KAAI,SAAA7B,GAAI,OAAI,gBAACD,EAAD,CAAM+B,IAAK9B,EAAKG,OAAOC,KAAMJ,KAAMA","sources":["webpack://gatsby-starter-blog/./src/components/bio.js","webpack://gatsby-starter-blog/./src/pages/index.js"],"sourcesContent":["/**\n * Bio component that queries for data\n * with Gatsby's useStaticQuery component\n *\n * See: https://www.gatsbyjs.com/docs/use-static-query/\n */\n\nimport * as React from \"react\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nconst Bio = () => {\n  const data = useStaticQuery(graphql`\n    query BioQuery {\n      site {\n        siteMetadata {\n          author {\n            name\n            summary\n          }\n          social {\n            twitter\n          }\n        }\n      }\n    }\n  `)\n\n  // Set these values by editing \"siteMetadata\" in gatsby-config.js\n  const author = data.site.siteMetadata?.author\n\n  return (\n    <div className=\"bio-wrapper\">\n      <div className=\"bio\">\n        <h1>web engineer</h1>\n        <span className=\"separator\">Â·</span>\n        <h2>{author?.name}</h2>\n        {/* {author?.summary && (\n          <p className=\"summary\">\n            {author?.summary || null}\n          </p>\n        )} */}\n      </div>\n    </div>\n  )\n}\n\nexport default Bio\n","import * as React from \"react\"\nimport { Link, graphql } from \"gatsby\"\n\nimport Bio from \"../components/bio\"\nimport Layout from \"../components/layout\"\nimport Seo from \"../components/seo\"\n\n\nconst Tile = ({ post }) => {\n  const title = post.frontmatter.title || post.fields.slug\n  const size = post.frontmatter.size || 'full';\n\n  return (\n    <li className={`tile tile-${size}`}>\n      <div className=\"tile-image\">\n        <img src={post.frontmatter.image?.publicURL} alt=\"project\" />\n      </div>\n      <article\n        className=\"tile-details\"\n        itemScope\n        itemType=\"http://schema.org/Article\"\n      >\n        <header>\n          <h2>\n            {post.frontmatter.link ? (\n              <a href={post.frontmatter.link} target=\"_blank\">\n                <span itemProp=\"headline\">{title}</span>\n              </a>\n            ) : (\n              <Link to={post.fields.slug} itemProp=\"url\">\n                <span itemProp=\"headline\">{title}</span>\n              </Link>\n            )}\n          </h2>\n        </header>\n        <section>\n          <p\n            dangerouslySetInnerHTML={{\n              __html: post.frontmatter.description || post.excerpt,\n            }}\n            itemProp=\"description\"\n          />\n        </section>\n      </article>\n    </li>\n  );\n}\n\n\nconst BlogIndex = ({ data, location }) => {\n  const posts = data.allMarkdownRemark.nodes\n\n  return (\n    <Layout location={location}>\n      <Seo title=\"gebeto | projects\" />\n      <Bio />\n      <ol style={{ listStyle: `none` }} className=\"tiles-grid\">\n        {posts.map(post => <Tile key={post.fields.slug} post={post} />)}\n      </ol>\n    </Layout>\n  )\n}\n\nexport default BlogIndex\n\nexport const pageQuery = graphql`\n  query {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    allMarkdownRemark(sort: { fields: [frontmatter___order], order: ASC }) {\n      nodes {\n        excerpt\n        fields {\n          slug\n        }\n        frontmatter {\n          date(formatString: \"MMMM DD, YYYY\")\n          title\n          description\n          link\n          size\n          image {\n            publicURL\n          }\n        }\n      }\n    }\n  }\n`\n"],"names":["author","useStaticQuery","site","siteMetadata","className","name","Tile","post","title","frontmatter","fields","slug","size","src","image","publicURL","alt","itemScope","itemType","link","href","target","itemProp","Link","to","dangerouslySetInnerHTML","__html","description","excerpt","data","location","posts","allMarkdownRemark","nodes","style","listStyle","map","key"],"sourceRoot":""}